# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Oov1lS5P5Z8VDoe8ea9wdfsRwMaCE5p5
"""

!pip install pymongo

# 2. Importar e conectar ao banco
from pymongo import MongoClient

# Conex√£o com seu MongoDB Atlas
client = MongoClient("mongodb+srv://aluno:aluno@banconosql.tasb3.mongodb.net/?retryWrites=true&w=majority&appName=BancoNoSQL")

# Acessando o banco de dados
db = client["mydb"]

# Verifica se conectou listando os bancos dispon√≠veis
print("Verificando conex√£o...")
print(client.list_database_names())

# Ping para verificar a conex√£o com o servidor
try:
    client.admin.command('ping')
    print("‚úÖ Conectado ao MongoDB com sucesso!")
except Exception as e:
    print("‚ùå Falha na conex√£o:", e)

# 3. Inserir um documento na cole√ß√£o "Coelho"
db.Coelho.insert_one({
    "nome": "Pompom",
    "idade": 2,
    "genero": "F√™mea",
    "raca": "Angor√°",
    "filiacao": "Lola",
    "funcao": "Reprodu√ß√£o"
})

# 4. Consultar todos os coelhos cadastrados
coelhos = db.Coelho.find()

print("Lista de coelhos cadastrados:")
for c in coelhos:
    print(c)

# Listar todas as cole√ß√µes (tabelas) do banco atual
colecoes = db.list_collection_names()
print("Cole√ß√µes dispon√≠veis no banco:")
for colecao in colecoes:
    print(f"- {colecao}")

colecoes = db.list_collection_names()

for nome_colecao in colecoes:
    print(f"\nüìÇ Cole√ß√£o: {nome_colecao}")
    documentos = db[nome_colecao].find()

    for doc in documentos:
        print(doc)



from pymongo import MongoClient
from datetime import datetime

client = MongoClient("mongodb+srv://aluno:aluno@banconosql.tasb3.mongodb.net/?retryWrites=true&w=majority&appName=BancoNoSQL")
db = client["mydb"]

def transacao_consulta_insercao():
    with client.start_session() as session:
        try:
            with session.start_transaction():
                # 1. CONSULTA ‚Äì busca um coelho espec√≠fico
                coelho = db.Coelho.find_one({"nome": "Pompom"}, session=session)

                if not coelho:
                    print("Coelho n√£o encontrado.")
                    return

                print(f"Coelho encontrado: {coelho['nome']}")

                # 2. INSER√á√ÉO ‚Äì adiciona um hist√≥rico m√©dico para ele
                db.Historico_Medico.insert_one({
                    "tipo_ocorrencia": "Check-up geral",
                    "data_diagnostico": datetime.now(),
                    "tratamento_aplicado": "Nenhum",
                    "veterinario_resp": "Dr. Coelhinho",
                    "status_tratamento": "Conclu√≠do"
                }, session=session)

                print("Hist√≥rico m√©dico inserido com sucesso.")

        except Exception as e:
            print("Erro na transa√ß√£o:", e)

# Rodando a fun√ß√£o
transacao_consulta_insercao()

print("\nVerificando hist√≥rico m√©dico:")
historico = db.Historico_Medico.find()

for h in historico:
    print(h)

colecoes = db.list_collection_names()

for nome_colecao in colecoes:
    print(f"\nüìÇ Cole√ß√£o: {nome_colecao}")
    documentos = db[nome_colecao].find()

    for doc in documentos:
        print(doc)

coelho = db.Coelho.find_one({"nome": "Pompom"})

if coelho:
    historicos = db.Historico_Medico.find({"id_coelho": coelho["_id"]})

    print(f"Hist√≥rico m√©dico de {coelho['nome']}:")
    for h in historicos:
        print(h)
else:
    print("Coelho 'Pompom' n√£o encontrado.")

